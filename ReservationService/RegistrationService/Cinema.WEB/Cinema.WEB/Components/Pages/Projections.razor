@page "/projections/{MovieId:guid}"
@inject NavigationManager Navigation
@rendermode InteractiveServer
@using Cinema.WEB.Api
@using Cinema.Common.Entities.MovieService
@inject MovieServiceHttpClient movieClient
@inject CinemaServiceHttpClient cinemaClient

<PageTitle>Projections</PageTitle>

<div class="container">
    <h2>@MovieTitle</h2>

    <div class="nav-bar">
        <button @onclick="PreviousDay" disabled="@IsPreviousDisabled">&larr;</button>
        <span><strong>@SelectedDate.ToString("dddd - dd.MM.yyyy")</strong></span>
        <button @onclick="NextDay" disabled="@IsNextDisabled">&rarr;</button>
    </div>

    <table>
        <thead>
            <tr>
                <th>SÁL</th>
                <th>Časy promítání</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var hallId in ProjectionsByHall)
            {
                <tr>
                    <td>@hallNames[hallId.Key]</td>
                    <td>
                        @foreach (var projection in ProjectionsByHall[hallId.Key])
                        {
                            <span class="time-button" @onclick="@(() => NavigateToProjection(projection.Id))">
                                @projection.StartTime.ToString("HH:mm")
                            </span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public Guid MovieId { get; set; }

    private string MovieTitle = string.Empty;
    private DateOnly SelectedDate = DateOnly.FromDateTime(DateTime.Today);

    private Dictionary<Guid, List<ProjectionEntity>> ProjectionsByHall = new();
    private Dictionary<Guid, string> hallNames = new();
    private List<ProjectionEntity> AllProjections = new();

    private bool IsPreviousDisabled => SelectedDate <= DateOnly.FromDateTime(DateTime.Today);
    private bool IsNextDisabled => SelectedDate >= DateOnly.FromDateTime(DateTime.Today.AddDays(7));

    protected override async Task OnInitializedAsync()
    {
        var movie = await movieClient.GetMovieById(MovieId);
        MovieTitle = movie.Title;

        AllProjections = await movieClient.GetAllProjectionsOfMovie(MovieId);

        FilterProjectionsForSelectedDate();

        foreach (var item in ProjectionsByHall)
        {
            var hall = await cinemaClient.GetHallByHallId(item.Key);
            hallNames.Add(item.Key, hall.Name);
        };
    }

    private void FilterProjectionsForSelectedDate()
    {
        ProjectionsByHall = AllProjections
            .Where(p => DateOnly.FromDateTime(p.StartTime) == SelectedDate)
            .GroupBy(p => p.HallId)
            .ToDictionary(
                g => g.Key,
                g => g.OrderBy(p => p.StartTime).ToList()
            );
    }

    private void PreviousDay()
    {
        if (!IsPreviousDisabled)
        {
            SelectedDate = SelectedDate.AddDays(-1);
            FilterProjectionsForSelectedDate();
        }
    }

    private void NextDay()
    {
        if (!IsNextDisabled)
        {
            SelectedDate = SelectedDate.AddDays(1);
            FilterProjectionsForSelectedDate();
        }
    }

    private void NavigateToProjection(Guid projectionId)
    {
        Navigation.NavigateTo($"/seats/{projectionId}");
    }
}



<style>
    .container {
        text-align: center;
        margin-top: 30px;
    }

    .nav-bar {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 20px;
        margin-bottom: 20px;
    }

    button {
        padding: 5px 15px;
        font-size: 16px;
    }

    table {
        margin: 0 auto;
        border-collapse: collapse;
        width: 70%;
    }

    th, td {
        border: 2px solid black;
        padding: 12px;
        text-align: center;
    }

    th {
        background-color: #e0e0e0;
    }

    .time-button {
        margin: 5px;
        padding: 5px 10px;
        border: 1px solid black;
        background-color: #fff;
        cursor: pointer;
        display: inline-block;
    }

        .time-button:hover {
            background-color: #f0f0f0;
        }
</style>

